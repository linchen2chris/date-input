* date-input
a react component for date input, totally manual input field

available props

| Props          | description                      | optional? | comment                                                                           |
|----------------+----------------------------------+-----------+-----------------------------------------------------------------------------------|
| value          | the initial date Value           | yes       | format "YYYY-MM-DD"                                                               |
| onChange       | callback function                | yes       | call when you type in any field                                                   |
| onBlur         | callback function                | yes       | call when you blur the whole DateInput                                            |
| minDate        | the min date                     | yes       | if the date you fill in is before minDate will get error, format "YYYY-MM-DD"     |
| minDateError   | customized errorMessage          | yes       | default errorMessage is "The date is too early"                                   |
| maxDate        | the max date                     | yes       | if the date you fill in is after maxDate will get error, format "YYYY-MM-DD"      |
| maxDateError   | customized errorMessage          | yes       | default errorMessage is "The date is too late"                                    |
| invalidError   | customized errorMessage          | yes       | default errorMessage is "please input a valid date"                               |
| rules          | customized validate rules        | yes       | the format should follow [{checker: value => fun(val), errorMessage: 'a string'}] |
| shouldValidate | toggle whether validate the date | yes       | default false. set it true when you need validate your date                       |

currently, we have default validate rules
#+BEGIN_SRC js
    let defaultRules = [
      {
        checker: value => moment(dateValue, 'YYYY-MM-DD', true).isValid(),
        errorMessage: this.props.invalidError || 'please input a valid date',
      },
      //only when you pass minDate
      {
        checker: (value, option) => moment(dateValue).isSameOrAfter(option.minDate),
        errorMessage: this.props.minDateError || 'The date is too early',
      },
      //only validate when you pass maxDate
      {
        checker: (value, option) => moment(dateValue).isSameOrBefore(option.maxDate),
        errorMessage: this.props.maxDateError || 'The date is too late',
      },
    ];
#+END_SRC

Also, you are allowed to pass customized rules, just following the format above.

* Examples
** no validate only type in value
   #+BEGIN_SRC html
   <DateInput />
   #+END_SRC
** customize invalidError
   #+BEGIN_SRC html
   <DateInput shouldValidate invalidError="it is invalid date" />
   #+END_SRC
** add minDate validate and customized its errorMessage
   #+BEGIN_SRC html
   <DateInput shouldValidate minDate="1990-01-01" minDateError="should before 1990-01-01" />
   #+END_SRC
** add maxDate validate and customized its errorMessage
   #+BEGIN_SRC html
   <DateInput shouldValidate maxDate={moment().format('YYYY-MM-DD')} maxDateError="your birthday should be a past date" />
   #+END_SRC
** customize the whole validate rules, p.s. the default rules will lost 
   #+BEGIN_SRC html
   <DateInput shouldValidate rules={[{checker: value => moment().isBefore(value), errorMessage: 'the date should be the future date'}]} />
   #+END_SRC
* demo gif
** type your date
[[file:doc/dateInput.gif]]

** valdate when you blur it
[[file:doc/dateInput-validateOnBlur.gif]]

** validate when you type the full date
[[file:doc/dateInput-validateOnFinish.gif]]
* Have a try ?

#+BEGIN_SRC zsh
yarn install
yarn storybook
#+END_SRC

then feel free to have a try

* Import in your project
#+BEGIN_SRC zsh
yarn add date-input
#+END_SRC

then date-input will appear in your package.json,

#+BEGIN_SRC js
import DateInput from 'date-input';
#+END_SRC

import this component in your source code

* Roadmap
  + [X] add props minDate and maxDate which can be exactly date or relative date.
  + [X] add more validate Rules for user to choose, like [isFutureDate, isPastDate]
  + [X] allow user to pass into customized validate rules, error messages
  + [] support date format like MM/YYYY, which is useful like expire date of credit card
  + [] support customized style

